#include <iostream>
#include<bits/stdc++.h> 
using namespace std;

struct node
{
	int data;
	node *next;
};

struct node* new_node(int d)
{
	struct node* temp=(struct node*)malloc(sizeof(struct node*));
	temp->data=d;
	temp->next=NULL;
	return temp;
}

void print_ll(struct node* root)
{
	struct node *head=root;
	while(head!=NULL)
	{
	cout<<head->data<<" ";
	head=head->next;
	}
}
void remove_dup(node* root)
{
	unordered_set <int> seen;
	node* current=root;
	node* prev=NULL;
	while(current!=NULL)
	{
		if (seen.find(current->data)!=seen.end())
			{	prev->next=current->next;
				delete(current);
				
			}
		else
		 	{
				seen.insert(current->data);
				prev=current;
			}
		
		current=prev->next;
	}
}
int main() 
{
	struct node *root=new_node(10);
	root->next=new_node(20);
	root->next->next=new_node(20);
	print_ll(root);
	remove_dup(root);
	print_ll(root);
	
	return 0;
}
